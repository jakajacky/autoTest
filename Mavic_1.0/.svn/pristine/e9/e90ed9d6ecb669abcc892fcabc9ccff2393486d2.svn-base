//
//  MeasureAPI.m
//  Mavic
//
//  Created by XiaoQiang on 2017/4/17.
//  Copyright © 2017年 LoHas-Tech. All rights reserved.
//

#import "MeasureAPI.h"
#import "DCHttpRequest.h"
#import "LoginManager.h"

@interface MeasureAPI ()
{
    NSDictionary *params;
}
@property (nonatomic, strong) DCHttpRequest *request;
@property (nonatomic, strong) DCDatabase *mainDatabase;

@end

@implementation MeasureAPI


- (void)uploadResultWithResult:(NSArray *)result completion:(void(^)(BOOL, id, NSString *))complete {
    User *user = [LoginManager defaultManager].currentUser;
    
    NSDate *datenow = [NSDate date];//现在时间
    
    params = @{@"user_id"   : user.Id,
               @"scene"     : @"L",
               @"algo_ver"  : @"L",
               @"app_ver"   : @"1.0",
               @"data_type" : @1,
               @"terminal_type" : @"iPad",
               @"measure_date"  : @((long)[datenow timeIntervalSince1970]*1000),
               @"frequency"     : @125,
               @"customer_id"   : user.mobile,
               @"height"        : @(user.height),
               @"patchItem"     : result};
    [self loadRequestProperties];
    
    [self.request startWithSuccess:^(id result) {
        complete(YES, result, @"");
        
    } failure:^(NSInteger errCode, NSString *errMsg, NSDictionary *userInfo) {
        complete(NO, userInfo,errMsg);
    }];
}



- (void)loadRequestProperties
{
    [self.request cancelRequest];
    
    self.request.type    = DCHttpRequestTypePOST;
    self.request.baseUrl = BASE_URL;
    self.request.method  = @"patchScene/u/save";
    self.request.params  = params;
    
    self.request.allowsLogMethod       = kLogEnabled;
    self.request.allowsLogHeader       = kHttpRequestAllowsLogHeader;
    self.request.allowsLogResponseGET  = kHttpRequestAllowsLogResponseGET;
    self.request.allowsLogResponsePOST = kHttpRequestAllowsLogResponsePOST;
    self.request.allowsLogRequestError = kHttpRequestAllowsLogRequestError;
    
    User *user = [LoginManager defaultManager].currentUser;
    
    [self.request setValue:[NSString stringWithFormat:@"%ld",user.app_KEY]
        forHTTPHeaderField:@"APP_KEY"];
    [self.request setValue:user.app_TOKEN
        forHTTPHeaderField:@"APP_TOKEN"];
    [self.request setValue:ACCESS_TOKEN
        forHTTPHeaderField:@"ACCESS_TOKEN"];
    [self.request setValue:@"application/json"
        forHTTPHeaderField:@"Content-Type"];
    
}

- (DCHttpRequest *)request {
    if (!_request) {
        _request = [[DCHttpRequest alloc] init];
    }
    return _request;
}


@end
